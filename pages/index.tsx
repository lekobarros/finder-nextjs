import React, { Component, createRef } from 'react';
import Head from 'next/head'

import gsap from 'src/lib/plugins/gsap';

interface AppProps {
}

type AppState = {
  isListeling: boolean,
  tl: GSAPTimeline | null,
  tlReverse: GSAPTimeline | null
}

import ButtonListen from 'components/Button/Listen';
import PulseBorder from 'components/PulseBorder';
import WrapSection from 'components/WrapSections';

export default class Page extends Component<AppProps> {
  private myRef = createRef<HTMLDivElement>();
  private btnListen = createRef<HTMLDivElement>();

  state: AppState = {
    isListeling: false,
    tl: null,
    tlReverse: null
  }

  onAnimateBordes() {
    const node: HTMLElement[] = this.myRef.current?.querySelectorAll('div') as unknown as HTMLElement[];

    gsap.effects.fadeBorder(node[0], { opacity: 0.4, delay: 0 });
    gsap.effects.fadeBorder(node[1], { opacity: 0.2, delay: 0.6 });
    gsap.effects.fadeBorder(node[2], { opacity: 0.1, delay: 1.2 });
  }

  onAnimatePulseBorder() {
    const btnListen: HTMLElement = this.btnListen.current as unknown as HTMLElement;
    const node: HTMLElement[] = this.myRef.current?.querySelectorAll('div') as unknown as HTMLElement[];

    // Kill Animation
    node?.forEach(el => gsap.killTweensOf(el));

    gsap.set(node, { opacity: 0 });

    // Active Pulse Border
    this.state.tl = gsap.timeline({});
    this.state.tl.addLabel('start', '>=0');
    this.state.tl.pulseButton(btnListen, { delay: 0 });
    this.state.tl.pulseBorder(node[0], { zIndex: 3, delay: 0 }, 'start');
    this.state.tl.pulseBorder(node[1], { zIndex: 3, delay: 0.6 }, 'start');
    this.state.tl.pulseBorder(node[2], { zIndex: 3, delay: 1.2 }, 'start');

    this.setState((state) => ({ isListeling: true }));
  }

  // Hooks
  componentDidMount() {
    this.onAnimateBordes();
  }

  // View
  render() {
    return (
      <div>
        <Head>
          <title>Find Your Music</title>
          <meta name="description" content="Generated by create next app" />
        </Head>

        <WrapSection>
          <ButtonListen onClick={() => this.onAnimatePulseBorder()} ref={this.btnListen} disabled={this.state.isListeling} />

          {/* Borders with Effect Pulse In/Out */}
          <div ref={this.myRef}>
            <PulseBorder width={192} height={192} />
            <PulseBorder width={288} height={288} />
            <PulseBorder width={288} height={288} />
          </div>

          <div>
            <h2>Echo</h2>
            <p>Foxes</p>
          </div>

          {/* <button onClick={() => this.onClick()} style={{ position: 'absolute', zIndex: 999 }} >123</button> */}
        </WrapSection>
      </div>
    )
  }
}